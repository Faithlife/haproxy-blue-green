global
    maxconn {{or (key "service/haproxy/maxconn") 256}}
    debug
    # Recommended SSL ciphers as per https://hynek.me/articles/hardening-your-web-servers-ssl-ciphers/
    ssl-default-bind-options no-sslv3
    ssl-default-bind-ciphers ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:ECDH+3DES:DH+3DES:RSA+AESGCM:RSA+AES:RSA+3DES:!aNULL:!MD5:!DSS

    ssl-default-server-options no-sslv3
    ssl-default-server-ciphers ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:ECDH+3DES:DH+3DES:RSA+AESGCM:RSA+AES:RSA+3DES:!aNULL:!MD5:!DSS
    tune.ssl.default-dh-param 2048

defaults
    mode http
    option forwardfor
    option http-server-close
    timeout connect {{or (key "service/haproxy/timeouts/connect") "5000ms"}}
    timeout client {{or (key "service/haproxy/timeouts/client") "50000ms"}}
    timeout server {{or (key "service/haproxy/timeouts/server") "50000ms"}}

frontend www
    bind *:80
    {{ if env "HAPROXY_USESSL" }}bind *:443 ssl crt /haproxy/ssl.crt{{ end }}

    tcp-request inspect-delay 5s
    tcp-request content accept if { req_ssl_hello_type 1 }

    reqadd X-Forwarded-Proto:\ http if !{ ssl_fc }
    reqadd X-Forwarded-Proto:\ https if { ssl_fc }
    {{ if eq (env "HAPROXY_USESSL") "force" }}
    # Redirect all non-secure connections to HTTPS
    redirect scheme https if !{ ssl_fc }{{ end }}

{{- $service_name := env "HAPROXY_SERVICE_NAME" }}
{{- $host := env "HAPROXY_SERVICE_HOST" }}
{{- $check_path := env "HAPROXY_SERVICE_CHECK_PATH" }}
{{- $colors := "blue,green" | split "," }}
{{- $current_color := key (print "service/" $service_name "/current_color") }}
    acl host_{{ $service_name }} hdr(host) -i {{ $host }}
    acl host_{{ $service_name }}_stage hdr(host) -i stage.{{ $host }}

    # point stage.{service} to the servers not currently serviced by {service}
{{- range $color := $colors }}
    {{ if ne $current_color $color }}use_backend {{ $service_name }}_{{ $color }} if host_{{ $service_name }}_stage{{ end }}
{{ end }}
    use_backend {{ $service_name }}_{{ $current_color }} if host_{{ $service_name }}

{{ if env "HAPROXY_STATS" }}
frontend stats
    bind *:{{ or (env "HAPROXY_STATS_PORT") "1936" }}
    mode http
    use_backend stats
{{ end }}


### Consul-configured backend services ###
{{- range $color := $colors }}
backend {{ $service_name }}_{{ $color }}
{{- if $check_path }}
    option httpchk {{ or (env "HAPROXY_SERVICE_CHECK_VERB") "GET" }} {{ $check_path }}
{{ end }}
{{- range service (print $color "." $service_name) }}
    server {{ .Node }}-{{ .Port }} {{ .Address }}:{{ .Port }}{{ if $check_path }} check{{ end }}{{ end }}
{{ end }}


{{ if env "HAPROXY_STATS" }}

backend stats
    stats enable
    stats hide-version
    stats refresh 5s
    stats realm {{ or (env "HAPROXY_STATS_TITLE") "HAProxy Statistics" }}
    stats uri {{ or (env "HAPROXY_STATS_URI") "/" }}
{{ end }}
